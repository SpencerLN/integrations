---
description: Pipeline for parsing Salesforce AuraRequest logs.
processors:
- json:
    field: message
    target_field: json
    ignore_failure: true
- set:
    field: event.original
    value: '{{{message}}}'
    ignore_failure: true
    ignore_empty_value: true
- fingerprint:
    fields:
    - json.REQUEST_ID
    - json.SESSION_KEY
    - json.TIMESTAMP_DERIVED
    - json.USER_ID
    target_field: _id
    ignore_missing: true
- set:
    field: salesforce.aurarequest.access_mode
    value: "REST"
    ignore_failure: true
    ignore_empty_value: true
- set:
    field: ecs.version
    value: "8.5.0"
    ignore_failure: true
    ignore_empty_value: true
- date:
    field: json.TIMESTAMP_DERIVED
    target_field: "@timestamp"
    formats:
    - ISO8601
    ignore_failure: true
- rename:
    field: json.ACTION_MESSAGE
    target_field: salesforce.aurarequest.action_message
    ignore_missing: true
    ignore_failure: true
- convert:
    field: json.CPU_TIME
    target_field: salesforce.aurarequest.cpu_time
    type: float
    ignore_missing: true
    ignore_failure: true
- convert:
    field: json.DB_TOTAL_TIME
    target_field: salesforce.aurarequest.db_time.total
    type: float
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.EVENT_TYPE
    target_field: salesforce.aurarequest.event_type
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.LOGIN_KEY
    target_field: salesforce.aurarequest.login_key
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.ORGANIZATION_ID
    target_field: salesforce.aurarequest.organization_id
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.REQUEST_ID
    target_field: salesforce.aurarequest.request_id
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.REQUEST_STATUS
    target_field: salesforce.aurarequest.request_status
    ignore_missing: true
    ignore_failure: true
- convert:
    field: json.RUN_TIME
    target_field: salesforce.aurarequest.run_time
    type: float
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.SESSION_KEY
    target_field: salesforce.aurarequest.session_key
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.URI
    target_field: salesforce.aurarequest.uri
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.URI_ID_DERIVED
    target_field: salesforce.aurarequest.uri_derived_id
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.USER_AGENT
    target_field: salesforce.aurarequest.user_agent
    ignore_missing: true
    ignore_failure: true
- script:
    description: Set request user agent value from user agent numeric code.
    lang: painless
    ignore_failure: true
    source: |
        Map map = new HashMap();
        map.put("100", "Internet Explorer");
        map.put("110", "Firefox");
        map.put("130", "Chrome");
        map.put("140", "Safari");
        map.put("150", "Opera");
        map.put("160", "Android");
        map.put("170", "Netscape");
        map.put("180", "Webkit");
        map.put("190", "Gecko");
        map.put("230", "Blackberry");
        map.put("240", "Good Access");
        map.put("999", "Unknown");
        String temp = map.get(ctx.salesforce.aurarequest.user_agent.substring(0,3));
        if (temp != null) {
          ctx.salesforce.aurarequest.user_agent = temp;
        }
    if: 'ctx.salesforce?.aurarequest?.user_agent != null'
- rename:
    field: json.USER_ID_DERIVED
    target_field: salesforce.aurarequest.user_id_derived
    ignore_missing: true
    ignore_failure: true
- set:
    field: event.dataset
    value: "salesforce.aurarequest"
    ignore_failure: true
    ignore_empty_value: true
- set:
    field: event.kind
    value: "event"
    ignore_failure: true
    ignore_empty_value: true
- set:
    field: event.module
    value: "salesforce"
    ignore_failure: true
    ignore_empty_value: true
- set:
    field: event.category
    value: ["network"]
    ignore_failure: true
    ignore_empty_value: true
- set:
    field: event.action
    value: "aura-request"
    ignore_failure: true
    ignore_empty_value: true
- convert:
    field: salesforce.aurarequest.run_time
    target_field: event.duration
    type: long
    ignore_failure: true
- set:
    field: event.outcome
    value: "success"
    if: '(ctx.salesforce?.aurarequest?.request_status == "S" || ctx.salesforce?.aurarequest?.request_status == "R")'
    ignore_failure: true
    ignore_empty_value: true
- set:
    field: event.outcome
    value: "failure"
    if: '(ctx.salesforce?.aurarequest?.request_status == "F" || ctx.salesforce?.aurarequest?.request_status == "U" || ctx.salesforce?.aurarequest?.request_status == "A" || ctx.salesforce?.aurarequest?.request_status == "N")'
    ignore_failure: true
    ignore_empty_value: true
- rename:
    field: salesforce.aurarequest.uri
    target_field: event.url
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.USER_ID
    target_field: user.id
    ignore_missing: true
    ignore_failure: true
- rename:
    field: json.USER_TYPE
    target_field: user.roles
    ignore_missing: true
    ignore_failure: true
# A Salesforce internal IP (such as a login from Salesforce Workbench or AppExchange) is shown as “Salesforce.com IP”
- rename:
    field: json.CLIENT_IP
    target_field: source.ip
    if: 'ctx.json?.CLIENT_IP != "Salesforce.com IP" && ctx.json?.CLIENT_IP != "" && ctx.json?.CLIENT_IP != null'
    ignore_missing: true
    ignore_failure: true
# A Salesforce internal IP (such as a login from Salesforce Workbench or AppExchange) is shown as “Salesforce.com IP”
- geoip:
    field: source.ip
    target_field: source.geo
    if: 'ctx.source?.ip != "Salesforce.com IP" && ctx.source?.ip != "" && ctx.source?.ip != null'
    ignore_missing: true
    ignore_failure: true
- append:
    field: related.ip
    value: '{{{source.ip}}}'
    if: ctx.source?.ip != null
    allow_duplicates: false
    ignore_failure: true
- rename:
    field: json.REQUEST_METHOD
    target_field: http.request.method
    ignore_missing: true
    ignore_failure: true
- script:
    description: Drops null/empty values recursively.
    lang: painless
    source: |
        boolean dropEmptyFields(Object object) {
            if (object == null || object == "") {
                return true;
            } else if (object instanceof Map) {
                ((Map) object).values().removeIf(value -> dropEmptyFields(value));
                return (((Map) object).size() == 0);
            } else if (object instanceof List) {
                ((List) object).removeIf(value -> dropEmptyFields(value));
                return (((List) object).length == 0);
            }
            return false;
        }
        dropEmptyFields(ctx);
- remove:
    field:
      - json
      - message
    ignore_missing: true
    ignore_failure: true
- remove:
    field: event.original
    if: "ctx.tags == null || !(ctx.tags.contains('preserve_original_event'))"
    ignore_failure: true
    ignore_missing: true
on_failure:
- set:
    field: error.message
    value: '{{{_ingest.on_failure_message}}}'
